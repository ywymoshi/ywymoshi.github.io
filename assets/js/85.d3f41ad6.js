(window.webpackJsonp=window.webpackJsonp||[]).push([[85],{440:function(t,v,_){"use strict";_.r(v);var r=_(25),s=Object(r.a)({},(function(){var t=this,v=t.$createElement,_=t._self._c||v;return _("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[_("h2",{attrs:{id:"mvc模型"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#mvc模型"}},[t._v("#")]),t._v(" MVC模型")]),t._v(" "),_("p",[t._v("Model View Controller。用一种业务逻辑、数据、界面显示分离的方法组织代码，将业务逻辑聚集到一个部件里面，在改进和个性化定制界面及用户交互的同时，不需要重新编写业务逻辑。")]),t._v(" "),_("p",[t._v("MVC分层开发= 视图层 + 控制层 + 数据模型层")]),t._v(" "),_("h3",{attrs:{id:"组成结构"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#组成结构"}},[t._v("#")]),t._v(" 组成结构")]),t._v(" "),_("ul",[_("li",[_("p",[_("strong",[t._v("视图层:")]),t._v(" 将信息显示给用户（可以定义多个视图）。")])]),t._v(" "),_("li",[_("p",[_("strong",[t._v("控制层:")]),t._v(" 处理用户输入的信息。负责从视图读取数据，控制用户输入，并向模型发送数据，是应用程序中处理用户交互的部分。负责管理与用户交互交互控制")])]),t._v(" "),_("li",[_("p",[_("strong",[t._v("模型层:")]),t._v(" 负责存储系统的中心数据")])])]),t._v(" "),_("h3",{attrs:{id:"mvc模型在b-s架构中的实现"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#mvc模型在b-s架构中的实现"}},[t._v("#")]),t._v(" MVC模型在B/S架构中的实现")]),t._v(" "),_("p",[t._v("BS架构的典型实现：Browser/Server 、 CS:Client/Server "),_("img",{attrs:{src:"/img/softwareRequire/8-2.png",alt:"img"}}),_("br"),t._v(" "),_("img",{attrs:{src:"/img/softwareRequire/8-1.png",alt:"img"}})]),t._v(" "),_("p",[_("strong",[t._v("BS架构的典型实现：")])]),t._v(" "),_("ul",[_("li",[_("strong",[t._v("View:")]),t._v(" JSP动态进行页面展示；CSS 页面样式设计；JS（JQuery,Nodejs,Layui,EasyUI,BootStrap,AngularJs,Reactjs,VUE等）页面业务逻辑及页面框架设计，Ajax 异步请求。")]),t._v(" "),_("li",[_("strong",[t._v("Control:")]),t._v(" servlet,Structs,SpringMVC/SpringBoot")]),t._v(" "),_("li",[_("strong",[t._v("Model:")]),t._v(" 数据模型 Bean/POJO，服务层，持久化（JDBC,Hibernate,Mybatis）。")])]),t._v(" "),_("h2",{attrs:{id:"数据概念模型"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#数据概念模型"}},[t._v("#")]),t._v(" 数据概念模型")]),t._v(" "),_("p",[t._v("Conceptual Data Model:概念数据模型，它以实体－联系(Entity-RelationShip, E-R)理论为基础，并对这一理论进行了扩充。它从用户的观点出发对信息进行建模，主要用于数据库的概念级设计")]),t._v(" "),_("p",[t._v("概念数据模型=实体+联系")]),t._v(" "),_("h2",{attrs:{id:"包含的元素"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#包含的元素"}},[t._v("#")]),t._v(" 包含的元素")]),t._v(" "),_("h3",{attrs:{id:"实体"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#实体"}},[t._v("#")]),t._v(" 实体")]),t._v(" "),_("p",[t._v("指现实世界中客观存在，并可相互区别的事物或者事件。它可以是具体的对象，例如一种商品，一名职工，一个机构等，也可以是抽象的事件，例如一次会议，一次旅行等。"),_("br"),t._v(" "),_("img",{attrs:{src:"/img/softwareRequire/9-1.png",alt:"img"}})]),t._v(" "),_("ul",[_("li",[_("p",[_("strong",[t._v("属性:")]),t._v(" 每一个实体都包括一组用来描述实体特征的属性(Attribute),例如学员实体可由学员编号，学员年龄，性别等组成。在CDM中，使用name和code表示。")])]),t._v(" "),_("li",[_("p",[_("strong",[t._v("类型:")]),t._v(" 表示属性的数据类型。指定属性允许的值范围。"),_("br"),t._v(" "),_("img",{attrs:{src:"/img/softwareRequire/9-2.png",alt:"img"}})])]),t._v(" "),_("li",[_("p",[_("strong",[t._v("标识符:")]),t._v(" 标识实体属性的约束")])])]),t._v(" "),_("p",[_("strong",[t._v("常用的标识符有：")])]),t._v(" "),_("ul",[_("li",[_("strong",[t._v("Mandatory:")]),t._v(" 属性是否允许为空")]),t._v(" "),_("li",[_("strong",[t._v("Primary Identity:")]),t._v(" 表示是否为主标识")]),t._v(" "),_("li",[_("strong",[t._v("Display:")]),t._v(" 表示属性是否在模型图中展示。")])]),t._v(" "),_("h3",{attrs:{id:"数据域"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#数据域"}},[t._v("#")]),t._v(" 数据域")]),t._v(" "),_("p",[t._v("域是具有相同数据类型值的集合，可以被多个实体的属性以及数据项共享。")]),t._v(" "),_("ul",[_("li",[t._v("类似于数据字典，常用于属性的值是固定的几个的情况。")]),t._v(" "),_("li",[t._v("定义一个数据域可以应用到多个实体中。")]),t._v(" "),_("li",[t._v("域发生变化只需求修改域的定义即可，无需逐个修改实体。")])]),t._v(" "),_("p",[_("strong",[t._v("创建数据域：")])]),t._v(" "),_("ol",[_("li",[_("p",[t._v("定义数据域的基本信息："),_("br"),t._v(" "),_("img",{attrs:{src:"/img/softwareRequire/9-3.png",alt:"img"}})])]),t._v(" "),_("li",[_("p",[t._v("定义数据域的子项：\n"),_("img",{attrs:{src:"/img/softwareRequire/9-4.png",alt:"img"}})])]),t._v(" "),_("li",[_("p",[t._v("使用数据域：\n"),_("img",{attrs:{src:"/img/softwareRequire/9-5.png",alt:"img"}})])])]),t._v(" "),_("h3",{attrs:{id:"数据项"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#数据项"}},[t._v("#")]),t._v(" 数据项")]),t._v(" "),_("p",[t._v("即实体的属性。定义好数据项（属性），在实体中可以直接添加已经定义的数据项。")]),t._v(" "),_("p",[t._v("一个数据项可以在多个实体中使用。")]),t._v(" "),_("ul",[_("li",[t._v("对于公共的属性，无需在多个实体中重复敲入。")]),t._v(" "),_("li",[t._v("属性发生变化只需求修改域的定义即可，无需逐个修改实体的属性")])]),t._v(" "),_("p",[_("strong",[t._v("创建数据项：")]),t._v(" 和数据域的创建类似。\n"),_("strong",[t._v("使用数据项：")]),_("br"),t._v(" "),_("img",{attrs:{src:"/img/softwareRequire/9-6.png",alt:"img"}})]),t._v(" "),_("h3",{attrs:{id:"联系"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#联系"}},[t._v("#")]),t._v(" 联系")]),t._v(" "),_("p",[t._v("指两个实体之间或者实体内部的连接或关系。\n完成实体定义以后，应该在它们之间建立联系。实体的联系通常是依据业务规则确定的。")]),t._v(" "),_("p",[_("strong",[t._v("包括的类型：")])]),t._v(" "),_("ul",[_("li",[_("strong",[t._v("一对一：")]),t._v(" 对象A只能有一个对象B")]),t._v(" "),_("li",[_("strong",[t._v("一对多：")]),t._v(" 对象A可以有多个对象B")]),t._v(" "),_("li",[_("strong",[t._v("多对一：")]),t._v(" 对象B可以有多个对象A")]),t._v(" "),_("li",[_("strong",[t._v("多对多：")]),t._v(" 对象A可以有多个对象B，对象B可以有多个对象A")])]),t._v(" "),_("p",[t._v("以学生和课程的关系为例："),_("br"),t._v("\n学生可以有多们课程，课程可以有多个学生，他们之间的关系是多对多的关系\n"),_("img",{attrs:{src:"/img/softwareRequire/9-7.png",alt:"img"}})]),t._v(" "),_("h2",{attrs:{id:"数据持久化"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#数据持久化"}},[t._v("#")]),t._v(" 数据持久化")]),t._v(" "),_("ul",[_("li",[t._v("将内存中的数据模型转换为存储模型,以及将存储模型转换为内存中的数据模型的过程. 数据模型可以是任何数据结构或对象模型,存储模型可以是关系模型、XML、二进制流等。")]),t._v(" "),_("li",[t._v("通常指的内存数据与数据库模型的转换。")])]),t._v(" "),_("h3",{attrs:{id:"关系型数据库模型"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#关系型数据库模型"}},[t._v("#")]),t._v(" 关系型数据库模型")]),t._v(" "),_("p",[t._v("oracle/mysql/sql server等")]),t._v(" "),_("h3",{attrs:{id:"表"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#表"}},[t._v("#")]),t._v(" 表")]),t._v(" "),_("ul",[_("li",[_("strong",[t._v("表的元素")]),t._v(" "),_("ul",[_("li",[_("strong",[t._v("列名：")]),t._v(" 命名要有意义，使用驼峰格式")]),t._v(" "),_("li",[_("strong",[t._v("数据类型：")]),t._v(" int、float、varchar、date等。")]),t._v(" "),_("li",[_("strong",[t._v("约束：")]),t._v(" 非空、唯一、主键、外键、自增长等")])])]),t._v(" "),_("li",[_("strong",[t._v("表数据操作")]),t._v(" "),_("ul",[_("li",[_("strong",[t._v("增：")]),t._v(" insert into table values();")]),t._v(" "),_("li",[_("strong",[t._v("删:")]),t._v(" delete from table where xxx=xxx;")]),t._v(" "),_("li",[t._v("truncate table")]),t._v(" "),_("li",[_("strong",[t._v("改:")]),t._v("  update table set xxx=xxx,yyyy=yyy;")]),t._v(" "),_("li",[_("strong",[t._v("查:")]),t._v(" select * from table;")])])])]),t._v(" "),_("h3",{attrs:{id:"聚合函数、子查询、联合查询、分组"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#聚合函数、子查询、联合查询、分组"}},[t._v("#")]),t._v(" 聚合函数、子查询、联合查询、分组")]),t._v(" "),_("ul",[_("li",[_("p",[_("strong",[t._v("聚合函数：")])]),t._v(" "),_("ul",[_("li",[t._v("Count(*):数据数量")]),t._v(" "),_("li",[t._v("Sum()：求和")]),t._v(" "),_("li",[t._v("Avg()：求平均数")]),t._v(" "),_("li",[t._v("max()：求最大值")]),t._v(" "),_("li",[t._v("Min()：求最小值")])])]),t._v(" "),_("li",[_("p",[_("strong",[t._v("子查询：")]),_("br"),t._v("\nin/not in"),_("br"),t._v("\n将子查询的结果作为主查询的条件"),_("br"),t._v("\nexists/not exists"),_("br"),t._v("\n将主查询的数据，放到子查询中做条件验证，根据验证结果（TRUE 或 FALSE）来决定主查询的数据结果是否得以保留")])]),t._v(" "),_("li",[_("p",[_("strong",[t._v("联合查询：")])]),t._v(" "),_("ul",[_("li",[_("p",[_("strong",[t._v("全连接：")]),t._v("  取数据并集")])]),t._v(" "),_("li",[_("p",[_("strong",[t._v("内连接：")]),t._v("  取数据交集"),_("br"),t._v("\nselect * from student a,SCORE B WHERE A.student_id=B.student_id;")])]),t._v(" "),_("li",[_("p",[_("strong",[t._v("左连接 left join:")]),t._v("   取左表的所有数据。"),_("br"),t._v("\nselect * from student a LEFT OUTER JOIN score b on a.student_id=b.student_id;")])]),t._v(" "),_("li",[_("p",[_("strong",[t._v("右连接 right join：")]),t._v("  取右表的所有数据。"),_("br"),t._v("\nselect * from student a RIGHT JOIN score b on a.student_id=b.student_id;")])])])]),t._v(" "),_("li",[_("p",[_("strong",[t._v("分组查询：")])]),t._v(" "),_("ul",[_("li",[t._v("group by")]),t._v(" "),_("li",[t._v("having")])])])]),t._v(" "),_("p",[_("strong",[t._v("[注]：")]),_("br"),t._v("\nSelect 子句中的所有查询字段，除了聚合函数，都必须放在group by子句中。"),_("br"),t._v("\n分组函数中的条件要写在having后面")]),t._v(" "),_("h3",{attrs:{id:"存储过程"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#存储过程"}},[t._v("#")]),t._v(" 存储过程")]),t._v(" "),_("p",[t._v("数据库编程技术，完成特定功能的sql集。包括：变量定义，变量赋值，游标，sql语句（DML），输入输出参数等。")]),t._v(" "),_("p",[_("img",{attrs:{src:"/img/softwareRequire/10-1.png",alt:"img"}})]),t._v(" "),_("h2",{attrs:{id:"对象关系映射"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#对象关系映射"}},[t._v("#")]),t._v(" 对象关系映射")]),t._v(" "),_("p",[t._v("用于实现面向对象编程语言里不同类型系统的数据之间的转换，建立对象和数据库数据表的映射，便于开发进行对象和数据库表之间的交互（持久化）。")]),t._v(" "),_("h3",{attrs:{id:"orm的实现"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#orm的实现"}},[t._v("#")]),t._v(" ORM的实现")]),t._v(" "),_("p",[t._v("Hibernate/Mybatis")]),t._v(" "),_("h3",{attrs:{id:"mybatis映射类型"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#mybatis映射类型"}},[t._v("#")]),t._v(" Mybatis映射类型")]),t._v(" "),_("ul",[_("li",[t._v("简单映射：表字段和对象属性一对一映射")]),t._v(" "),_("li",[t._v("级联映射：\n"),_("ul",[_("li",[t._v("一对一关系：ResultMap>Assocation")]),t._v(" "),_("li",[t._v("一对多关系：ResultMap>Collection")])])]),t._v(" "),_("li",[t._v("Mybatis对ORM的支持"),_("br"),t._v(" "),_("img",{attrs:{src:"/img/softwareRequire/10-2.png",alt:"img"}}),_("br"),t._v(" "),_("img",{attrs:{src:"/img/softwareRequire/10-3.png",alt:"img"}})])]),t._v(" "),_("h2",{attrs:{id:"物理数据模型"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#物理数据模型"}},[t._v("#")]),t._v(" 物理数据模型")]),t._v(" "),_("p",[_("strong",[t._v("Physical Data Model（PDM）:")]),t._v(" 物理数据模型，是面向计算机物理表示的模型，描述了数据在储存介质上的组织结构。")]),t._v(" "),_("ul",[_("li",[t._v("进行数据库体系结构设计，真正实现数据在数据库中的存放。")]),t._v(" "),_("li",[t._v("与具体的DBMS 有关")]),t._v(" "),_("li",[t._v("物理数据模型的内容包括确定所有的表和列，定义外键用于确定表之间的关系，基于用户的需求可能进行规范化等内容"),_("br"),t._v(" "),_("img",{attrs:{src:"/img/softwareRequire/11-1.png",alt:"img"}})])]),t._v(" "),_("h2",{attrs:{id:"包含的主要元素"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#包含的主要元素"}},[t._v("#")]),t._v(" 包含的主要元素")]),t._v(" "),_("h3",{attrs:{id:"表-2"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#表-2"}},[t._v("#")]),t._v(" 表")]),t._v(" "),_("p",[t._v("数据库表，表信息与数据模型的DBMS一致\n"),_("img",{attrs:{src:"/img/softwareRequire/11-2.png",alt:"img"}})]),t._v(" "),_("h3",{attrs:{id:"视图"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#视图"}},[t._v("#")]),t._v(" 视图")]),t._v(" "),_("ul",[_("li",[t._v("视图是从一个或几个基本表（或视图）中导出的虚拟的表。在系统的数据字典中仅存放了视图的定义，不存放视图对应的数据。")]),t._v(" "),_("li",[t._v("视图使用查询语句创建，可以定义视图只查或者可修改模式。"),_("br"),t._v(" "),_("img",{attrs:{src:"/img/softwareRequire/11-3.png",alt:"img"}})])]),t._v(" "),_("h3",{attrs:{id:"索引"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#索引"}},[t._v("#")]),t._v(" 索引")]),t._v(" "),_("p",[t._v("索引其实是一种数据结构，其功能是帮助我们快速匹配查找到需要的数据行，是数据库性能优化最常用的工具之一。其作用相当于超市里的导购员、书本里的目录。")]),t._v(" "),_("ul",[_("li",[_("p",[_("strong",[t._v("索引类型：")])]),t._v(" "),_("ul",[_("li",[_("p",[_("strong",[t._v("主键索引 PRIMARY KEY:")]),t._v(" 一种特殊的唯一索引，不允许有空值。一般是在建表的时候同时创建主键索引")])]),t._v(" "),_("li",[_("p",[_("strong",[t._v("唯一索引 UNIQUE:")]),t._v(" 唯一索引列的值必须唯一，但允许有空值")])]),t._v(" "),_("li",[_("p",[_("strong",[t._v("普通索引 INDEX:")]),t._v(" 最基本的索引，它没有任何限制")])]),t._v(" "),_("li",[_("p",[_("strong",[t._v("组合索引 INDEX:")]),t._v(" 组合索引，即一个索引包含多个列.")])]),t._v(" "),_("li",[_("p",[_("strong",[t._v("全文索引 FULLTEXT：")]),t._v(" 全文索引")])])])]),t._v(" "),_("li",[_("p",[_("strong",[t._v("索引设计的原则")])]),t._v(" "),_("ul",[_("li",[_("p",[t._v("适合索引的列是出现在where子句中的列，或者连接子句中指定的列")])]),t._v(" "),_("li",[_("p",[t._v("基数较小的类，索引效果较差，没有必要在此列建立索引")])]),t._v(" "),_("li",[_("p",[t._v("使用短索引，如果对长字符串列进行索引，应该指定一个前缀长度，这样能够节省大量索引空间")])]),t._v(" "),_("li",[_("p",[t._v("不要过度索引。索引需要额外的磁盘空间，并降低写操作的性能。在修改表内容的时候，索引会进行更新甚至重构，索引列越多，这个时间就会越长。所以只保持需要的索引有利于查询即可。")])])])]),t._v(" "),_("li",[_("p",[t._v("创建索引"),_("br"),t._v(" "),_("img",{attrs:{src:"/img/softwareRequire/11-4.png",alt:"img"}})])])]),t._v(" "),_("h3",{attrs:{id:"主键"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#主键"}},[t._v("#")]),t._v(" 主键")]),t._v(" "),_("p",[t._v("主键约束即在表中定义一个主键来唯一确定表中每一行数据的标识符。主键可以是表中的某一列或者多列的组合，其中由多列组合的主键称为复合主键。\n"),_("strong",[t._v("基本特性：")]),t._v(" 非空，唯一"),_("br"),t._v(" "),_("img",{attrs:{src:"/img/softwareRequire/11-5.png",alt:"img"}})]),t._v(" "),_("h3",{attrs:{id:"外键"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#外键"}},[t._v("#")]),t._v(" 外键")]),t._v(" "),_("ul",[_("li",[t._v("建立表与表之间的关联关系。让表与表之间的数据，更加的完整，关连性更强。")]),t._v(" "),_("li",[t._v("设置外键约束的两个表之间会具有父子关系，即子表中外键的字段的取值范围由父表所决定"),_("br"),t._v(" "),_("img",{attrs:{src:"/img/softwareRequire/11-6.png",alt:"img"}})])]),t._v(" "),_("h2",{attrs:{id:"cdm生成pdm"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#cdm生成pdm"}},[t._v("#")]),t._v(" CDM生成PDM")]),t._v(" "),_("p",[t._v("使用CDM可以自动生成PDM,操作如下所示：")]),t._v(" "),_("p",[_("img",{attrs:{src:"/img/softwareRequire/11-7.png",alt:"img"}})]),t._v(" "),_("h2",{attrs:{id:"pdm导出sql语句"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#pdm导出sql语句"}},[t._v("#")]),t._v(" PDM导出sql语句")]),t._v(" "),_("p",[t._v("PDM使用power designer可以自动导出数据模型sql语句，如下图所示：")]),t._v(" "),_("p",[_("img",{attrs:{src:"/img/softwareRequire/11-8.png",alt:"img"}})])])}),[],!1,null,null,null);v.default=s.exports}}]);