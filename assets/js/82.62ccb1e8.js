(window.webpackJsonp=window.webpackJsonp||[]).push([[82],{433:function(v,_,t){"use strict";t.r(_);var l=t(25),i=Object(l.a)({},(function(){var v=this,_=v.$createElement,t=v._self._c||_;return t("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[t("h2",{attrs:{id:"软件开发的本质"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#软件开发的本质"}},[v._v("#")]),v._v(" 软件开发的本质")]),v._v(" "),t("p",[t("strong",[v._v("软件开发的不变事实：")]),v._v(" "),t("code",[v._v("一致性")]),v._v("，"),t("code",[v._v("可变性")]),v._v("，和"),t("code",[v._v("不可见性")]),v._v("。")]),v._v(" "),t("ul",[t("li",[t("strong",[v._v("一致性：")]),v._v(" 应用软件必须与所基于的特定硬件/软件明天相符合,也必须与现有的信息系统相符合，并集成在一致。")]),v._v(" "),t("li",[t("strong",[v._v("可变性：")]),v._v(" 业务过程和需求会不断的变化。")]),v._v(" "),t("li",[t("strong",[v._v("不可见性：")]),v._v(" 负责输出的代码通常深深地隐藏在”不可见”的程序语句，二进制代码库，以及周边的系统软件中。")])]),v._v(" "),t("h2",{attrs:{id:"软件开发的意外事件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#软件开发的意外事件"}},[v._v("#")]),v._v(" 软件开发的意外事件")]),v._v(" "),t("p",[v._v("软件开发的意外事件的三个因素：利益相关者，过程，建模")]),v._v(" "),t("ol",[t("li",[t("p",[t("strong",[v._v("利益相关者")])]),v._v(" "),t("ul",[t("li",[v._v("客户\n"),t("ul",[t("li",[v._v("客户的需求被误解或者没有被完全捕获")]),v._v(" "),t("li",[v._v("客户的需求改变过于频繁")]),v._v(" "),t("li",[v._v("客户没有准备为项目提供足够的资源")]),v._v(" "),t("li",[v._v("客户不想与开发者合作")]),v._v(" "),t("li",[v._v("客户怀有不切实际的期望")]),v._v(" "),t("li",[v._v("软件不再对客户有利")])])]),v._v(" "),t("li",[v._v("开发者(分析员，设计员，程序员等)\n"),t("ul",[t("li",[v._v("开发者不能胜任")])])])])]),v._v(" "),t("li",[t("p",[t("strong",[v._v("过程")])]),v._v(" "),t("ul",[t("li",[v._v("声明了所执行活动的次序。")]),v._v(" "),t("li",[v._v("详细说明要交付哪些开发的人工制品，以及什么时候交付。")]),v._v(" "),t("li",[v._v("将活动和人工制品分配给开发者")]),v._v(" "),t("li",[v._v("提供用来监控项目进展，评估结果和规划未来项目的标准")])])]),v._v(" "),t("li",[t("p",[t("strong",[v._v("建模")]),t("br"),v._v(" "),t("strong",[v._v("UML:")]),v._v(" Unified Modeling Language 统一建模语言")]),v._v(" "),t("ul",[t("li",[t("strong",[v._v("状态模型：")]),v._v(" 描述静态数据结构")]),v._v(" "),t("li",[t("strong",[v._v("行为模型：")]),v._v(" 描述对象协作")]),v._v(" "),t("li",[t("strong",[v._v("状态变化模型：")]),v._v(" 描述随着时间的推移，系统所允许的状态")])])])]),v._v(" "),t("h2",{attrs:{id:"软件生命周期的5个阶段"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#软件生命周期的5个阶段"}},[v._v("#")]),v._v(" 软件生命周期的5个阶段")]),v._v(" "),t("ol",[t("li",[t("strong",[v._v("业务分析")]),v._v(" "),t("ul",[t("li",[v._v("确定和详细说明需求，开发和集成系统的功能和数据模型，并捕获非功能性需求和其他系统约束。")])])]),v._v(" "),t("li",[t("strong",[v._v("系统设计")]),v._v(" "),t("ul",[t("li",[v._v("包括体系结构设计和详细设计。对涉及客户端的用户界面和服务器端的数据库对象的程序设计进行解释。提出影响系统可理解性，可维护性和可扩展性的各种设计问题，并对其文档化。")])])]),v._v(" "),t("li",[t("strong",[v._v("实现")]),v._v(" "),t("ul",[t("li",[v._v("对客户端应用程序和服务器数据库进行编码，测试等，保证系统实现符合系统设计。")])])]),v._v(" "),t("li",[t("strong",[v._v("集成和部署")]),v._v(" "),t("ul",[t("li",[v._v("将系统的组成构建组装在一起，以及与外部系统的对接。")])])]),v._v(" "),t("li",[t("strong",[v._v("运行和维护")]),v._v(" "),t("ul",[t("li",[v._v("使用新系统替换老系统，保障新系统的正常运行，并承接对新系统的修正和扩展工作。")])])])]),v._v(" "),t("p",[t("img",{attrs:{src:"/img/softwareRequire/1-3.png",alt:"img"}})]),v._v(" "),t("h2",{attrs:{id:"软件生命周期各阶段输入输出"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#软件生命周期各阶段输入输出"}},[v._v("#")]),v._v(" 软件生命周期各阶段输入输出")]),v._v(" "),t("p",[t("img",{attrs:{src:"/img/softwareRequire/1-3-1.png",alt:"img"}})]),v._v(" "),t("h2",{attrs:{id:"开发模型与方法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#开发模型与方法"}},[v._v("#")]),v._v(" 开发模型与方法")]),v._v(" "),t("p",[t("strong",[v._v("主要的开发模型与方法")])]),v._v(" "),t("ol",[t("li",[v._v("瀑布模型")]),v._v(" "),t("li",[v._v("螺旋模型")]),v._v(" "),t("li",[v._v("敏捷开发")]),v._v(" "),t("li",[v._v("面向方面开发")])]),v._v(" "),t("ul",[t("li",[t("strong",[v._v("瀑布模型")])])]),v._v(" "),t("blockquote",[t("p",[v._v("要求每一个阶段都有明确的文档产出，对于严格的瀑布模型每一个阶段都不应该重叠，而应该在评审通过、相关的产出物都已经基线后才能够进入到下一个阶段。就是说瀑布模型一般是按顺序执行的")])]),v._v(" "),t("p",[t("img",{attrs:{src:"/img/softwareRequire/1-1.png",alt:"img"}})]),v._v(" "),t("ul",[t("li",[t("strong",[v._v("螺旋模型")])])]),v._v(" "),t("blockquote",[t("p",[v._v("螺旋模型并不是一个完全独立的模型，而是与瀑布模型有着内在联系。它遵从瀑布模型“需求→架构→设计→编码→测试”的路线。其最大的特点是整个开发过程是迭代的和风险驱动的。就是通过将瀑布模型的多个阶段转化到多个迭代过程中，以减少项目的风险。")])]),v._v(" "),t("p",[t("img",{attrs:{src:"/img/softwareRequire/1-2.png",alt:"img"}})]),v._v(" "),t("ul",[t("li",[t("strong",[v._v("敏捷开发流程")])])]),v._v(" "),t("blockquote",[t("p",[v._v("定义：敏捷开发是一种价值观与原则，指导我们更加高效的开发。以用户需求为核心，采用迭代(时间周期)、增量(循序渐进，功能模块)的方式开发软件，目的在于快速覆盖、响应市场需求")])]),v._v(" "),t("p",[t("strong",[v._v("特点：")])]),v._v(" "),t("ol",[t("li",[v._v("迭代开发")]),v._v(" "),t("li",[v._v("增量交付")]),v._v(" "),t("li",[v._v("开发团队和用户反馈推动产品开发")]),v._v(" "),t("li",[v._v("持续集成")]),v._v(" "),t("li",[v._v("开发团队自我管理")])]),v._v(" "),t("p",[t("img",{attrs:{src:"/img/softwareRequire/1-4.png",alt:"img"}})]),v._v(" "),t("ul",[t("li",[v._v("面向方面开发（AOP）")])]),v._v(" "),t("blockquote",[t("p",[v._v("AOP的主要目标是通过识别所谓的横切关注点，以及为这些关注点生产独立的软件模块来生产出更加模块化的系统。这些模块成为方面，利用成为方面编排的过程将方面集成起来。")])]),v._v(" "),t("p",[t("strong",[v._v("AOP的几个概念：")])]),v._v(" "),t("ul",[t("li",[t("strong",[v._v("方面：")]),v._v(" 功能模块，AOP将系统分解成许多方面，这些方面构成了核心功能构建，称为基础代码。")]),v._v(" "),t("li",[t("strong",[v._v("连接点：")]),v._v(" 软件组成的预定义的点，例如对方法的调用，对属性的访问，对象的实例化和抛出异常等。")]),v._v(" "),t("li",[t("strong",[v._v("通知：")]),v._v(" 需要为连接点采取的特定动作称为通知（例如，检查用户的安全性权限，或开始一个新的业务事实）。通知可以在链接点执行之前运行（前置通知），也可以在链接点完成之后运行（后置通知），或者可以取代连接点的执行（环绕通知）")]),v._v(" "),t("li",[t("strong",[v._v("方面编排：")]),v._v(" 方面构成了单独的方面代码，为了这样的系统能够运行，软件构件必须由方面组成，必须将方面编排到程序的逻辑流中，这样的一个软件组成过程称为方面编排。")]),v._v(" "),t("li",[t("strong",[v._v("切入点：")]),v._v(" 同一个通知可以应用到程序的许多连接点，与单个通知相关的一组链接称为切入点。\n"),t("img",{attrs:{src:"/img/softwareRequire/1-5.png",alt:"img"}})])])])}),[],!1,null,null,null);_.default=i.exports}}]);